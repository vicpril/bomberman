name: DEPLOY

on:
  push:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest
    steps:
      
      - name: Check Out Repo 
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Build and push: nginx"
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .deploy/nginx.Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/bomberman-nginx:latest
          
      - name: "Build and push: api"
        uses: docker/build-push-action@v5
        env:
          NODE_ENV: production
          DATABASE_URL: ${{vars.DATABASE_URL}}
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{vars.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
          POSTGRES_HOST: ${{vars.POSTGRES_HOST}}
          POSTGRES_PORT: ${{vars.POSTGRES_PORT}}
          PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
          PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
          CLIENT_URL: ${{vars.CLIENT_URL}}
          API_URL: ${{vars.API_URL}}
          API_JSON_URL: ${{vars.API_JSON_URL}}
          SOCKETS_URL: ${{vars.SOCKETS_URL}}
          SOCKETS_PATH: ${{vars.SOCKETS_PATH}}
        with:
          context: .
          file: .deploy/api.Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/bomberman-api:latest
          
      - name: "Build and push: frontend"
        uses: docker/build-push-action@v5
        env:
          NODE_ENV: production
          DATABASE_URL: ${{vars.DATABASE_URL}}
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{vars.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
          POSTGRES_HOST: ${{vars.POSTGRES_HOST}}
          POSTGRES_PORT: ${{vars.POSTGRES_PORT}}
          PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
          PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
          CLIENT_URL: ${{vars.CLIENT_URL}}
          API_URL: ${{vars.API_URL}}
          API_JSON_URL: ${{vars.API_JSON_URL}}
          SOCKETS_URL: ${{vars.SOCKETS_URL}}
          SOCKETS_PATH: ${{vars.SOCKETS_PATH}}
        with:
          context: .
          file: .deploy/frontend.Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/bomberman-frontend:latest
          
      - name: "Build and push: storybook"
        uses: docker/build-push-action@v5
        env:
          NODE_ENV: production
          DATABASE_URL: ${{vars.DATABASE_URL}}
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{vars.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
          POSTGRES_HOST: ${{vars.POSTGRES_HOST}}
          POSTGRES_PORT: ${{vars.POSTGRES_PORT}}
          PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
          PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
          CLIENT_URL: ${{vars.CLIENT_URL}}
          API_URL: ${{vars.API_URL}}
          API_JSON_URL: ${{vars.API_JSON_URL}}
          SOCKETS_URL: ${{vars.SOCKETS_URL}}
          SOCKETS_PATH: ${{vars.SOCKETS_PATH}}
        with:
          context: .
          file: .deploy/storybook.Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/bomberman-storybook:latest
          
      - name: "Build and push: sockets"
        uses: docker/build-push-action@v5
        env:
          NODE_ENV: production
          DATABASE_URL: ${{vars.DATABASE_URL}}
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{vars.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
          POSTGRES_HOST: ${{vars.POSTGRES_HOST}}
          POSTGRES_PORT: ${{vars.POSTGRES_PORT}}
          PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
          PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
          CLIENT_URL: ${{vars.CLIENT_URL}}
          API_URL: ${{vars.API_URL}}
          API_JSON_URL: ${{vars.API_JSON_URL}}
          SOCKETS_URL: ${{vars.SOCKETS_URL}}
          SOCKETS_PATH: ${{vars.SOCKETS_PATH}}
        with:
          context: .
          file: .deploy/sockets.Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/bomberman-sockets:latest

      - name: "Build and push: json"
        uses: docker/build-push-action@v5
        env:
          NODE_ENV: production
          DATABASE_URL: ${{vars.DATABASE_URL}}
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{vars.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
          POSTGRES_HOST: ${{vars.POSTGRES_HOST}}
          POSTGRES_PORT: ${{vars.POSTGRES_PORT}}
          PGADMIN_DEFAULT_EMAIL: ${{secrets.PGADMIN_DEFAULT_EMAIL}}
          PGADMIN_DEFAULT_PASSWORD: ${{secrets.PGADMIN_DEFAULT_PASSWORD}}
          CLIENT_URL: ${{vars.CLIENT_URL}}
          API_URL: ${{vars.API_URL}}
          API_JSON_URL: ${{vars.API_JSON_URL}}
          SOCKETS_URL: ${{vars.SOCKETS_URL}}
          SOCKETS_PATH: ${{vars.SOCKETS_PATH}}
        with:
          context: .
          file: .deploy/json.Dockerfile
          push: true
          tags: ghcr.io/${{ secrets.DOCKERHUB_USERNAME }}/bomberman-json:latest


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    
    - name: Check Out Repo 
      uses: actions/checkout@v4


    - name: Pull images
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          docker pull ghcr.io/vicpril/bomberman-sockets:latest
          docker pull ghcr.io/vicpril/bomberman-frontend:latest
          docker pull ghcr.io/vicpril/bomberman-storybook:latest
          docker pull ghcr.io/vicpril/bomberman-api:latest
          docker pull ghcr.io/vicpril/bomberman-json:latest
          docker pull ghcr.io/vicpril/bomberman-nginx:latest
          docker pull ghcr.io/vicpril/portfolio:latest

    - name: 'Refresh .env: copy template to remote'
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        source: ".env.production,.deploy/docker-compose.yml"
        target: /home/${{ secrets.SSH_USER }}
        overwrite: true
        strip_components: 1
        
    - name: 'Refresh .env: edit .env with secrets'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /home/${{ secrets.SSH_USER }}/
          rm -f .env
          mv .env.production .env
          printf "\nPOSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          printf "\nPGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}" >> .env

    - name: Reload remote components
      uses: appleboy/ssh-action@v1.0.3
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /home/${{ secrets.SSH_USER }}/
          docker-compose down
          docker-compose up -d --build --force-recreate

    - name: Clear docker images
      uses: appleboy/ssh-action@v1.0.3
      with: 
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          docker image prune -a -f
