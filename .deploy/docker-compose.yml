version: "3"
services:
  nginx:
    container_name: nginx
    depends_on:
      - api
      - json
      - frontend
      - sockets
    restart: always
    image: ghcr.io/vicpril/bomberman-nginx:latest
    ports:
      - "80:80"
      - "443:443"
    # volumes:
    #   - "/var/local/sert:/etc/ssl"


  frontend:
    container_name: frontend
    image: ghcr.io/vicpril/bomberman-frontend:latest
    # environment:
    #   NODE_ENV: production
    restart: always
    tty: true
    env_file:
      ./.env


  sockets:
    container_name: sockets
    image: ghcr.io/vicpril/bomberman-sockets:latest
    # environment:
    #   NODE_ENV: production
    restart: always
    env_file:
      ./.env
    
  json:
    container_name: json
    image: ghcr.io/vicpril/bomberman-json:latest
    # environment:
    #   NODE_ENV: production
    restart: always
    env_file:
      ./.env
    
  api:
    container_name: api
    image: ghcr.io/vicpril/bomberman-api:latest
    environment:
      # переназначить host на соседний контейнер
      POSTGRES_HOST: postgres
      # NODE_ENV: production
    restart: always
    depends_on:
      - postgres
    env_file:
      ./.env


  postgres:
    container_name: postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - ./database/postgresdata:/var/lib/postgresql/data
      - ./database/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: always
    env_file:
      ./.env

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   restart: always
  #   env_file:
  #     ./.env
  #   environment:
  #     PGADMIN_LISTEN_PORT: 8081
  #   ports:
  #     - "8081:8081"
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   depends_on:
  #     - postgres

  # storybook:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.storybook
  #   container_name: storybook
  #   restart: always
  #   volumes:
  #     - ./:/app
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     # - /app/node_modules
  #     # - /app/.next
  #   ports:
  #     - 6006:6006

# volumes:
#   pgadmin-data:

networks:
  default:
    driver: bridge